/*
*/
body{
   /*
      Единица fr(фракции) 3fr 1fr 1fr. При общей ширине в 100px
      1я колонка будет занимать 3fr из 5 возможных
      100 / 3+1+1 = 20px (1fr) значит 60px 1я колонка
   */
   /*----ПОЛЕЗНЫЕ СВОЙСТВА И ФУНКЦИИ----*/
   repeat(кол-во раз, размер); /*повторить 
    repeat( 2, 50px ); - 50px 50px  
    repeat( 2, 50px 70px ); - 50px 70px 50px 70px*/
    /*принимает свойства*/
    auto-fill /*- повторяет пока есть место в контейнере и размер блока определён.*/
   minmax(0,200px);/*там где можно ввести одно значение, можно воспользоваться ей */
   /**********ОПРЕДЕЛЕНИЕ СЕТКИ и ЕЁ РАЗМЕРОВ***********/
   
   grid-template-rows: repeat();/*кол-во строк и их высота*/
   grid-template-columns: 1fr 2fr;/* ко-во колонок и их высота*/
   grid-template: grid-template-rows / grid-template-columns;/*отвечает так же и за grid-template-areas*/
   grid-auto-rows: 100px;/*высота по ум. с колонкой тож самое*/

  
   grid-template-columns: repeat(auto-fit, minmax(0, max-content));
   justify-content: space-between;

   /*каждому дочернему элементу нужно дать имя*/
   grid-area: header;
   grid-area: main;  
   grid-area: sidebar;
   grid-area: footer;
      
   grid-template-areas: /*визуальное составление сетки в род. блоке*/
   "header header"/* этот участок называется Шаблон области*/
   "main sidebar"
   "footer footer";
   /*как сказано выше сокращённая grid-template может так же + */
   grid-template: 
   "header header" 25px /*то есть grid-template-rows для каждого ряда */
   "main sidebar" 30px
   "footer footer" 40px / 50px;

   /*****МЕСТОПОЛОЖЕНИЕ******/
   grid-column-start: 1;/*откуда начать*/
   grid-column-end: 2;/*у начала какой колонки закончить*/
   grid-column: 1;/*т.к. занимает одну колонку то сократить запись можно так*/
   grid-column: 1 / 3;/*занимаем 2 колонки с 1 по начало 3й*/
   grid-column: 1 / -1;/*от качала и до самого конца. -1 это конец*/
   /*с row всё тож самое. Можно ещё короче, порядок: */
   /*grid-row-start / grid-column-start / grid-row-end /grid-column-end */
   grid-area: 1 / 1 / 4 / 2;
   /*
   Ключевое слово span - указывается для определения не откуда - докуда, а
   откуда и сколько или сколько и докуда. Комбинаций строк и колонок куча.
   */
   grid-column: 1 / span 3; /*с 1й и 3 колонки*/
   grid-column: span 3 / 4; /*3 колонки до начала 3й*/

   /*
   Так же можно считать строки с конца использовав отрицательные значения. 
   Но мне пожалуй такое не нужно
   */


   /******ЗАЗОРЫ*******/
   grid-column-gap: 20px;/*расстояния солонок*/
   grid-row-gap: 20px;/*расстояния строк*/
   grid-gap: 20px 30px;/*grid-row-gap grid-column-gap*/
   grid-gap: 20px;/*общее расстояния*/
   
}




root{
   outline: none;/*стандартное выделение*/
   box-shadow: 0 0 10px 20px black;/*оказывается есть необязательный параметр толщины 20px */
}

